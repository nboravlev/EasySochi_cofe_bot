import os
from sqlalchemy import text
import asyncio
from db.db_async import get_async_session
from utils.logging_config import log_function_call, LogExecutionTime, get_logger


logger = get_logger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

CHAT_ID = -1002843679066  # –∫–∞–Ω–∞–ª –∏–ª–∏ —á–∞—Ç
@log_function_call(action="DB_monitor")
async def check_db(context):
    bot = context.bot

    try:
        async with get_async_session() as session:
            await session.execute(text("SELECT 1"))
        status_ok = True
        logger.info("ü´• DB_prod_cofebot check passed")
    except Exception as e:
        status_ok = False
        logger.error(f"‚ùå DB_prod_cofebot check failed: {e}")

    # –í–°–ï–ì–î–ê –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å, –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    text_msg = (
        "‚òïÔ∏è <b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö cofe_bot –¥–æ—Å—Ç—É–ø–Ω–∞</b>"
        if status_ok
        else "‚ùÑÔ∏è <b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö cofe_bot –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!</b>"
    )
    
    try:
        await bot.send_message(chat_id=CHAT_ID, text=text_msg, parse_mode="HTML")
    except Exception as send_error:
        logger.critical(f"üö® –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –ë–î: {send_error}")
