from db.db_async import get_async_session
from db.models.drinks import Drink
from telegram.ext import ContextTypes, CallbackQueryHandler, ConversationHandler
from sqlalchemy import select
from telegram import (
    Update, 
    InlineKeyboardButton, 
    InlineKeyboardMarkup
    )
from utils.logging_config import log_function_call, get_logger

logger = get_logger(__name__)

@log_function_call(action="Coffee_commit_done")
async def confirm_coffee_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    message = query.message

    # DEBUG
    logger.debug(
        f"[CONFIRM DEBUG] message_id={message.message_id}, "
        f"text={repr(message.text)}, caption={repr(message.caption)}, "
        f"has_photo={bool(message.photo)}, "
        f"reply_markup={bool(message.reply_markup)}"
    )

    try:
        drink_id = int(query.data.split("_")[-1])
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {query.from_user.id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞–ø–∏—Ç–∫–∞ ID={drink_id}")

        async with get_async_session() as session:
            result = await session.execute(select(Drink).where(Drink.id == drink_id))
            drink = result.scalar_one_or_none()

            if not drink:
                await query.answer("–û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫ ID={drink_id}")
                return ConversationHandler.END

            drink.is_draft = False
            await session.commit()

        confirmation_text = "üèÜ –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞–ø–∏—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –ñ–µ–ª–∞—é —Ö–æ—Ä–æ—à–∏—Ö –ø—Ä–æ–¥–∞–∂!"

        keyboard = [[
        InlineKeyboardButton("‚úçüèª –°–æ–∑–¥–∞—Ç—å –µ—â—ë –∫–∞—Ä—Ç–æ—á–∫—É", callback_data="create_card"),
        InlineKeyboardButton("üö™ –í—ã–π—Ç–∏", callback_data="cancel")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.text:
            logger.debug("[CONFIRM DEBUG] –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            await query.edit_message_text(confirmation_text, reply_markup=reply_markup)
        elif message.caption:
            logger.debug("[CONFIRM DEBUG] –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ")
            await query.edit_message_caption(caption=confirmation_text, reply_markup=reply_markup)
        else:
            logger.debug("[CONFIRM DEBUG] –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∏ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            await message.reply_text(confirmation_text, reply_markup=reply_markup)

        logger.info(f"–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞–ø–∏—Ç–∫–∞ ID={drink_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")

    except Exception as exc:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: {exc}")
        await message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

    return ConversationHandler.END

confirm_coffee_handler = CallbackQueryHandler(
    confirm_coffee_callback,
    pattern=r"^confirm_coffee_\d+$"
)
