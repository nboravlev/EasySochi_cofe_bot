import os
import re
from datetime import timedelta
from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
    Update
)
from telegram.ext import (
    ConversationHandler,
    CallbackQueryHandler,
    PreCheckoutQueryHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
from sqlalchemy import select, update as sa_update
from sqlalchemy.orm import joinedload, selectinload
from db.db_async import get_async_session
from db.models import Order, Drink, DrinkSize, DrinkAdd, User, OrderAdd
from utils.logging_config import log_function_call, LogExecutionTime, get_logger

logger = get_logger(__name__)

ORDER_STATUS_RECEIVED = 5

ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID")
if not (ADMIN_CHAT_ID):
    raise RuntimeError("Admin chat id did not set in environment variables")



# –ö–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª "–ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω"
@log_function_call(action="OrderReceived")
async def order_received_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    try:
        _, _, order_id_str = query.data.split("_")
        order_id = int(order_id_str)
    except ValueError:
        await query.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –≤ callback data")
        return ConversationHandler.END

    async with get_async_session() as session:
        result = await session.execute(
            select(Order)
            .options(
                selectinload(Order.user),       # –∫–ª–∏–µ–Ω—Ç
                selectinload(Order.manager),    # –º–µ–Ω–µ–¥–∂–µ—Ä
                selectinload(Order.session)     # –¥–ª—è last_action
            )
            .where(Order.id == order_id)
        )
        order = result.scalar_one_or_none()
        if not order:
            await query.message.edit_text("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return ConversationHandler.END

        # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        order.status_id = ORDER_STATUS_RECEIVED
        await session.flush()

        # —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ (—É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É)
        await query.message.edit_text("üôè –°–ø–∞—Å–∏–±–æ! –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω.")

        # —É–≤–µ–¥–æ–º–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ session.last_action
        session_obj = order.session
        if session_obj and session_obj.last_action:
            manager_msg_id = session_obj.last_action.get("message_id")
            if manager_msg_id:
                try:
                    await context.bot.edit_message_text(
                        chat_id=ADMIN_CHAT_ID,
                        message_id=manager_msg_id,
                        text=f"üéâ –ó–∞–∫–∞–∑ ‚Ññ{order.id} –ø–æ–ª—É—á–µ–Ω –∫–ª–∏–µ–Ω—Ç–æ–º ‚úÖ"
                    )
                except Exception as e:
                    logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: %s", e)

        await session.commit()

    return ConversationHandler.END
