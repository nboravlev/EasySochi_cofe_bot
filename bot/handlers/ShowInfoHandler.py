from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ForceReply
from telegram.ext import ContextTypes, ConversationHandler, ApplicationHandlerStop, CallbackQueryHandler

from utils.logging_config import log_function_call, LogExecutionTime, get_logger

import os

logger = get_logger(__name__)

INFO_TEXTS = {
    "info_booking": {
        "title": "üê± *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≥–æ—Å—Ç—è:*",
        "body": (
            "1. –ù–∞–∂–º–∏—Ç–µ –°—Ç–∞—Ä—Ç –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é;\n"
            "2. \n"
            "3. \n"
            "4. \n"
            "5. \n"
            "6. \n"
            "7. \n"
            "8. \n"
            "9. \n"
            "10. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ü–æ–º–æ—â—å'."
        )
    },
    "info_object": {
        "title": "üêº *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞*",
        "body": (
            "1. –ù–∞–∂–º–∏—Ç–µ 'Start' –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é;\n"
            "2. –ï—Å–ª–∏ –≤–∞—à –ò–î —Å —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤, –≤—ã –ø–æ–ø–∞–¥–µ—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è;\n"
            "3. –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–∏—Ç–æ–∫ –≤ –º–µ–Ω—é –ø–µ—Ä–µ–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É';\n"
            "4. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∏–∞–ª–æ–≥–∞. –°–ª–µ–¥—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º —Ä–æ–±–æ—Ç–∞;\n"
            "5. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ;\n"
            "6. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø;\n"
            "7. –†–æ–±–æ—Ç –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–ø–∏—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–º–µ—Ä–∞ S,M,L,XL;\n"
            "8. –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å –ù–µ—Ç;\n"
            "9. –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –ù–µ—Ç –Ω–∞ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã, —Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –∏ —Ä–∞–±–æ—Ç –Ω–∞—á–Ω–µ—Ç –±–ª–æ–∫ —Ü–µ–Ω—ã —Å –Ω–∞—á–∞–ª–∞;\n"
            "10. –î–∞–ª–µ–µ —Ä–æ–±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ–±–∞–≤–æ–∫ –∫ –Ω–∞–ø–∏—Ç–∫–∞–º;\n"
            "11. –û—Ç–º–µ—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏;\n"
            "12. –§–æ—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é. –î–ª—è –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–æ–≤;\n"
            "13. –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –¥–æ–∂–¥–µ—Ç–µ—Å—å –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∞ '–ì–æ—Ç–æ–≤–æ';\n"
            "14. –ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–æ–±–æ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É;\n"
            "15. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –µ—Å–ª–∏ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ –∂–º–∏—Ç–µ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å';\n"
            "16. –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∏—Ç—å' –∏ –Ω–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥ –∑–∞–Ω–æ–≤–æ."
        )
    }
}


def _get_effective_message(update: Update):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç message-–æ–±—ä–µ–∫—Ç, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –ø—Ä–∏—à–ª–æ –ª–∏ —ç—Ç–æ update.message
    –∏–ª–∏ —ç—Ç–æ callback_query (update.callback_query.message).
    """
    if update.message:
        return update.message
    if update.callback_query and update.callback_query.message:
        return update.callback_query.message
    return None


async def info_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–ø—Ä–∞–≤–∫–∏. –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ /info, —Ç–∞–∫ –∏ –ø—Ä–∏ callback.
    """
    message = _get_effective_message(update)
    if not message:
        return

    keyboard = [
        [InlineKeyboardButton("üê± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≥–æ—Å—Ç—è", callback_data="info_booking")],
        [InlineKeyboardButton("üêº –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞", callback_data="info_object")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await message.reply_text("‚ÑπÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:", reply_markup=reply_markup)


async def show_info_text(update_or_query: Update, key: str):
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á—É. –†–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∏ –¥–ª—è callback.
    –ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥ –≤ –∏–Ω—Ñ–æ' –∏–º–µ–µ—Ç callback_data='help_menu'.
    """
    data = INFO_TEXTS.get(key)
    if not data:
        return

    text = f"{data['title']}\n\n{data['body']}"
    markup = InlineKeyboardMarkup(
        [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∏–Ω—Ñ–æ", callback_data="info_menu")]]
    )

    message = _get_effective_message(update_or_query)
    if not message:
        return

    # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å edit_message_text –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É,
    # –Ω–æ reply_text –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω.
    await message.reply_text(text, parse_mode="Markdown", reply_markup=markup)


async def info_callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ –¥–ª—è help_*
    - –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ query (query.answer())
    - –≤—ã–∑—ã–≤–∞–µ—Ç show_help_text –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é –≤—ã–∑–æ–≤–æ–º help_command
    """
    query = update.callback_query
    if not query:
        return

    await query.answer()  # —É–±–∏—Ä–∞–µ–º "–∫—Ä—É—Ç–∏–ª–∫—É" –≤ UI

    data = query.data or ""
    if data == "info_booking":
        await show_info_text(update, "info_booking")
    elif data == "info_object":
        await show_info_text(update, "info_object")
    elif data == "info_menu":
        await info_command(update, context)
    else:
        return