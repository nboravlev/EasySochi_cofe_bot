from db.db_async import get_async_session
from db.models import Drink, DrinkSize, DrinkAdd
from telegram.ext import ContextTypes, CallbackQueryHandler, ConversationHandler
from sqlalchemy import update as sa_update
from telegram import Update
from utils.logging_config import log_function_call, get_logger

logger = get_logger(__name__)

@log_function_call(action="redo_coffee")
async def redo_coffee_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    message = query.message

    try:
        drink_id = int(query.data.split("_")[-1])
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {query.from_user.id} –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞ ID={drink_id}")

        async with get_async_session() as session:
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –Ω–∞–ø–∏—Ç–∫–∞
            await session.execute(
                sa_update(Drink)
                .where(Drink.id == drink_id)
                .values(is_draft=True, is_active=False)
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
            await session.execute(
                sa_update(DrinkSize)
                .where(DrinkSize.drink_id == drink_id)
                .values(is_active=False)
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–æ–±–∞–≤–∫–∏
            await session.execute(
                sa_update(DrinkAdd)
                .where(DrinkAdd.drink_id == drink_id)
                .values(is_active=False)
            )
            await session.commit()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ)
        if message.text:
            await query.edit_message_text(
                "üö´ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /create_card"
            )
        elif message.caption:
            await query.edit_message_caption(
                caption="üö´ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /create_card"
            )
        else:
            # –§–æ–ª–±—ç–∫ ‚Äî –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∏
            await message.reply_text(
                "üö´ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /create_card"
            )

        logger.info(f"–ù–∞–ø–∏—Ç–æ–∫ ID={drink_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ—á–µ–Ω –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è")

    except Exception as exc:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞–ø–∏—Ç–∫–∞: {exc}")
        await message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
        )

    return ConversationHandler.END


redo_coffee_handler = CallbackQueryHandler(
    redo_coffee_callback,
    pattern=r"^redo_coffee_\d+$"
)
