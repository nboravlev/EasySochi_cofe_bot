from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    KeyboardButton
)
from telegram.ext import (
    ConversationHandler,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters
)
from datetime import datetime

from db.db_async import get_async_session

from bot.db.models.orders import Booking
from bot.db.models.drinks import Apartment

from utils.escape import safe_html

from sqlalchemy import select, update as sa_update

from sqlalchemy.orm import selectinload

from utils.logging_config import log_function_call, LogExecutionTime, get_logger

logger = get_logger(__name__)

DECLINE_REASON = range(1)

@log_function_call(action = "Booking_decline_initiated")
async def booking_decline_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –†–∞–∑–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ callback
    data_parts = query.data.split("_")
    status_id = int(data_parts[-2])  # —Å—Ç–∞—Ç—É—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 8)
    booking_id = int(data_parts[-1])  # ID –±—Ä–æ–Ω–∏

    context.user_data["decline_booking_id"] = booking_id
    context.user_data["status_id"] = status_id

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
    keyboard = [[KeyboardButton("–æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏—á–∏–Ω—ã")]]
    await query.message.reply_text(
        "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–º–∞–∫—Å. 255 —Å–∏–º–≤–æ–ª–æ–≤):",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    )

    return DECLINE_REASON


async def booking_decline_reason(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reason = update.message.text.strip()
    if not reason or reason.lower() == "–æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏—á–∏–Ω—ã":
        reason = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
    else:
        reason = safe_html(reason)[:255]

    booking_id = context.user_data.get("decline_booking_id")
    status_id = context.user_data.get("status_id")

    async with get_async_session() as session:

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –±—Ä–æ–Ω—å —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
        result = await session.execute(
            select(Booking)
            .options(
                selectinload(Booking.apartment).selectinload(Apartment.apartment_type),
                selectinload(Booking.apartment).selectinload(Apartment.owner),
                selectinload(Booking.booking_type),
                selectinload(Booking.user)  # –≥–æ—Å—Ç—å
            )
            .where(Booking.id == booking_id)
        )
        booking = result.scalar_one_or_none()
        print(f"DEBUG_cancel: booking_id = {booking.id}, status = {booking.booking_type.name}, status_id = {booking.status_id}")
        if not booking:
            await update.message.reply_text("‚ùå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
            return ConversationHandler.END

        # –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        forbidden_statuses = [8, 9, 10, 11, 12]
        if booking.status_id in forbidden_statuses:
            await update.message.reply_text(
                f"‚õî –ù–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Å—Ç–∞—Ç—É—Å–µ <b>{booking.booking_type.name}</b>.",
                reply_markup=ReplyKeyboardRemove(),
                parse_mode="HTML"
            )
            return ConversationHandler.END
          # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–∏—á–∏–Ω—É
        booking.status_id = status_id
        booking.decline_reason = reason
        await session.commit()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞
    initiator_tg_id = update.effective_user.id
    guest_tg_id = booking.tg_user_id
    owner_tg_id = booking.apartment.owner_tg_id

    if initiator_tg_id == guest_tg_id:
        # –û—Ç–º–µ–Ω—É –¥–µ–ª–∞–µ—Ç –≥–æ—Å—Ç—å ‚Üí —É–≤–µ–¥–æ–º–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
        await context.bot.send_message(
            chat_id=owner_tg_id,
            text=(
                f"‚ùå –ì–æ—Å—Ç—å –æ—Ç–º–µ–Ω–∏–ª –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. ‚Ññ{booking.id}\n"
                f"–ê–¥—Ä–µ—Å: {booking.apartment.short_address}\n"
                f"C: {booking.check_in} –ø–æ: {booking.check_out}\n"
                f"–ü—Ä–∏—á–∏–Ω–∞: {reason}"
            )
        )
        confirm_text = "‚úÖ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤–ª–∞–¥–µ–ª–µ—Ü —É–≤–µ–¥–æ–º–ª—ë–Ω."
    else:
        # –û—Ç–º–µ–Ω—É –¥–µ–ª–∞–µ—Ç –≤–ª–∞–¥–µ–ª–µ—Ü ‚Üí —É–≤–µ–¥–æ–º–ª—è–µ–º –≥–æ—Å—Ç—è
        await context.bot.send_message(
            chat_id=guest_tg_id,
            text=(
                f"‚ùå –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Ññ{booking.id} –æ—Ç–º–µ–Ω–µ–Ω–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–º.\n"
                f"–ê–¥—Ä–µ—Å: {booking.apartment.short_address}\n"
                f"C: {booking.check_in} –ø–æ: {booking.check_out}\n"
                f"–ü—Ä–∏—á–∏–Ω–∞: {reason}\n\n"
                f"–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ? üëâ /start"
            )
        )
        confirm_text = "‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ, –≥–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª—ë–Ω."

    await update.message.reply_text(confirm_text, reply_markup=ReplyKeyboardRemove())

    # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    context.user_data.pop("decline_booking_id", None)
    context.user_data.pop("status_id", None)

    return ConversationHandler.END


# ‚úÖ Only one function: booking confirmation
BOOKING_STATUS_PENDING = 5
BOOKING_STATUS_CONFIRMED = 6
@log_function_call(action = "Booking_confirmation")
async def booking_confirm_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle booking confirmation by owner"""
    query = update.callback_query
    await query.answer()

    try:
        booking_id = int(query.data.split("_")[-1])
    except (ValueError, IndexError):
        await query.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        return ConversationHandler.END

    async with get_async_session() as session:
        result = await session.execute(
            select(Booking)
            .options(
                selectinload(Booking.user),
                selectinload(Booking.apartment).selectinload(Apartment.owner),
                selectinload(Booking.booking_type)
            )
            .where(
                Booking.id == booking_id,
                Booking.is_active.is_(True)
            )
        )
        booking = result.scalar_one_or_none()
        
        if not booking:
            await query.message.reply_text("‚ùå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            return ConversationHandler.END
        if booking.status_id != BOOKING_STATUS_PENDING:
            await query.message.reply_text(
                f"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Å—Ç–∞—Ç—É—Å–µ <b>{booking.booking_type.name}</b> "
                f"–Ω–µ–ª—å–∑—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                parse_mode="HTML"
            )
            return ConversationHandler.END

        # ‚úÖ Change status to Confirmed (id=6)
        booking.status_id = BOOKING_STATUS_CONFIRMED
        booking.updated_at = datetime.utcnow()
        await session.commit()

    # ‚úÖ Send notification to guest with chat button
    keyboard = [
        [InlineKeyboardButton("üí¨ –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç", callback_data=f"chat_booking_enter_{booking_id}")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id=booking.tg_user_id,
        text=(
            f"‚úÖ –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Ññ{booking.id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!\n\n"
            f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–ª–∞—Ç—ã "
            f"–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —á–∞—Ç –Ω–∏–∂–µ."
        ),
        reply_markup=reply_markup
    )

    # ‚úÖ Notify owner
    await context.bot.send_message(
        chat_id=booking.apartment.owner_tg_id,
        text=(
            f"‚úÖ –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Ññ{booking.id}.\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {booking.user.firstname or booking.user.tg_user_id} –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n"
            f"–ü—Ä–æ–∏–Ω—Å—Ç—Ä—É–∫—Ç–∏—Ä—É–π—Ç–µ –≥–æ—Å—Ç—è –æ —Å–ø–æ—Å–æ–±–∞—Ö –æ–ø–ª–∞—Ç—ã, –∞–ª–≥–æ—Ä–∏—Ç–º–µ –∑–∞—Å–µ–ª–µ–Ω–∏—è –∏ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è."
        )
    )

    # ‚úÖ Update the original message (remove confirmation buttons)
    await query.edit_message_text(
        f"‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Ññ{booking.id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!\n"
        f"–ß–∞—Ç —Å –≥–æ—Å—Ç–µ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.",reply_markup=ReplyKeyboardRemove()
    )

    return ConversationHandler.END