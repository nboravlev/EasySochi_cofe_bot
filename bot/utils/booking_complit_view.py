from bot.db.models.drinks import Apartment
from bot.db.models.drink_types import ApartmentType
from bot.db.models.orders import Booking
from bot.db.models.order_statuses import BookingType
from sqlalchemy.orm import selectinload
from db.db_async import get_async_session

from telegram.ext import ContextTypes

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto
)


def show_booked_appartment(booking: Booking) -> tuple[str, list[InputMediaPhoto] | None]:
    apartment = booking.apartment
    if apartment is None:
        return "<b>‚ùó –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</b>", None




    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = (
        f"<b>{apartment.short_address}</b>\n\n"
        f"üí¨ {apartment.description}\n\n"
        f"üè∑Ô∏è –¢–∏–ø: {apartment.apartment_type.name}\n"
        f"üìç –ó–∞–µ–∑–¥: {booking.check_in}\n"
        f"üìç –í—ã–µ–∑–¥: {booking.check_out}\n"
        f"üßç‚Äç‚ôÇÔ∏è –ì–æ—Å—Ç–µ–π: {booking.guest_count}\n"
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {booking.total_price} ‚ÇΩ\n"
        f"‚ö°Ô∏è–ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ‚Ññ{booking.id}"
    )

    # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    photos = None
    if getattr(apartment, "images", None):
        valid_photos = [img.tg_file_id for img in apartment.images if getattr(img, "tg_file_id", None)]
        if valid_photos:
            photos = [InputMediaPhoto(file_id) for file_id in valid_photos[:10]]

    return text, photos
