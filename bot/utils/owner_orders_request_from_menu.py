from bot.db.models.drinks import Apartment
from bot.db.models.orders import Booking

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto
)

from datetime import timedelta

def prepare_owner_orders_cards(current_booking: Booking, current_index: int, total: int) -> tuple[str, str | None, InlineKeyboardMarkup]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏."""
    apartment = current_booking.apartment
    timeout_deadline = (current_booking.created_at + timedelta(hours=27)).strftime("%Y-%m-%d %H:%M")  # N + 3 —á–∞—Å–∞ GMT
    status = current_booking.booking_type.name
    # –†–∞—Å—á–µ—Ç –∫–æ–º–∏—Å—Å–∏–∏
    commission_percent = current_booking.apartment.reward/100 or 0
    commission_sum = current_booking.total_price * commission_percent

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = (
        f"‚ÄºÔ∏è C—Ç–∞—Ç—É—Å <b>{status}</b> ‚ÄºÔ∏è\n\n"
        f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {current_booking.id}\n"
        f"üè† ID –æ–±—ä–µ–∫—Ç–∞: {apartment.id}\n"
        f"üè† –ê–¥—Ä–µ—Å: {current_booking.apartment.short_address}\n"
        f"üìÖ –ó–∞–µ–∑–¥: {current_booking.check_in.strftime('%Y-%m-%d')}\n"
        f"üìÖ –í—ã–µ–∑–¥: {current_booking.check_out.strftime('%Y-%m-%d')}\n"
        f"üë• –ì–æ—Å—Ç–µ–π: {current_booking.guest_count}\n"
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {current_booking.total_price} ‚ÇΩ\n"
        f"üíº –ö–æ–º–∏—Å—Å–∏—è: {current_booking.apartment.reward}% = {commission_sum:.0f} ‚ÇΩ\n\n"
        f"‚ÑπÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≥–æ—Å—Ç—è: {current_booking.comments or '‚Äî'}"
    )

        # –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons = []
    if current_index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"owner_book_prev_{current_index-1}"))
    if current_index < total - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π", callback_data=f"owner_book_next_{current_index+1}"))
    
    buttons = [buttons] if buttons else []
    if status == '–æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è':
        buttons.append([
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"booking_confirm_{current_booking.id}"),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"booking_decline_8_{current_booking.id}")
    ])
    if status == '–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ':
        buttons.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"booking_decline_10_{current_booking.id}"),
                        InlineKeyboardButton("üïä –ù–∞–ø–∏—Å–∞—Ç—å –≥–æ—Å—Ç—é", callback_data=f"chat_booking_{current_booking.id}")])
    buttons.append([InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back_to_objects")])

    markup = InlineKeyboardMarkup(buttons)
    
    return text, markup