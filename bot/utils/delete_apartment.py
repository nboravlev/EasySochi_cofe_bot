from sqlalchemy import select, exists, or_, and_, update as sa_update
from datetime import datetime
from sqlalchemy.orm import selectinload
from db.db_async import get_async_session
from bot.db.models.drinks import Apartment
from db.models.search_sessions import SearchSession
from bot.db.models.order_statuses import BookingType
from bot.db.models.orders import Booking

from telegram import Update

from telegram.ext import ContextTypes

from utils.logging_config import log_function_call, LogExecutionTime, get_logger

# –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —Å—Ç–∞—Ç—É—Å 5 = "pending", —Å—Ç–∞—Ç—É—Å 6 = "confirmed"
ACTIVE_BOOKING_STATUSES = [5, 6]


logger = get_logger(__name__)

@log_function_call(action="Apartment_delete")
async def delete_apartment(apartment_id: int, tg_user_id: int, update: Update, context: ContextTypes.DEFAULT_TYPE):
    async with get_async_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—É —Å –±—É–∫–∏–Ω–≥–∞–º–∏
        result = await session.execute(
            select(Apartment)
            .options(selectinload(Apartment.booking))
            .where(Apartment.id == apartment_id)
        )
        apartment = result.scalar_one_or_none()

        if not apartment:
            await update.callback_query.message.reply_text("‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return VIEW_OBJECTS

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        has_active = any(b.status_id in ACTIVE_BOOKING_STATUSES for b in apartment.booking)

        if has_active:
            await update.callback_query.message.reply_text(
                "üö´ –ù–∞ –¥–∞–Ω–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. "
                "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
            )
            return REPORT_PROBLEM

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π
        await session.execute(
            update(Apartment)
            .where(Apartment.id == apartment_id)
            .values(
                is_active=False,
                updated_at=datetime.utcnow(),
                deleted_by=tg_user_id
            )
        )
        await session.commit()

        await update.callback_query.message.reply_text("‚úÖ –û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
        return VIEW_OBJECTS
