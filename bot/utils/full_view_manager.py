from telegram import InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from db.models.drinks import Drink

def render_coffee_card(drink: Drink) -> tuple[str, list[InputMediaPhoto] | None, InlineKeyboardMarkup]:
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏
    if drink.drink_sizes:
        sizes_text = "\n".join(
            f"{ds.sizes.name}: {ds.price} ‚ÇΩ" if ds.price else f"{ds.sizes.name}: –Ω–µ—Ç"
            for ds in drink.drink_sizes
        )
    else:
        sizes_text = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–æ–∫
    if drink.drink_adds:
        adds_text = ", ".join(adds.add.name for adds in drink.drink_adds)
    else:
        adds_text = "–ù–µ—Ç –¥–æ–±–∞–≤–æ–∫"

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
    text = (
        f"<b>{drink.name}</b>\n\n"
        f"üí¨ {drink.description or '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}\n\n"
        f"üè∑Ô∏è –¢–∏–ø: {drink.drink_type.name}\n"
        f"üí∞ –¶–µ–Ω—ã –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º:\n{sizes_text}\n"
        f"üç≠ –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: {adds_text}"
    )

    # –§–æ—Ç–æ (–±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ)
    photos = [InputMediaPhoto(img.tg_file_id) for img in drink.images[:1]] if drink.images else None

    # –ö–Ω–æ–ø–∫–∏
    buttons = [
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_coffee_{drink.id}")],
        [InlineKeyboardButton("üîÑ –í–Ω–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ", callback_data=f"redo_coffee_{drink.id}")]
    ]
    markup = InlineKeyboardMarkup(buttons)

    return text, photos, markup
