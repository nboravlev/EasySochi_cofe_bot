from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove
)
from telegram.ext import (
    ConversationHandler,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters
)

from datetime import datetime

from db.db_async import get_async_session

from bot.db.models.orders import Booking
from bot.db.models.drinks import Apartment
from db.models.booking_chat import BookingChat
from db.models.users import User

from sqlalchemy import select

async def send_booking_chat_history(booking_id: int,update: Update):
    async with get_async_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        result = await session.execute(
            select(Booking).where(Booking.id == booking_id)
        )
        booking = result.scalar_one_or_none()
        if not booking:
            await update.message.reply_text("‚ùå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é
        result = await session.execute(
            select(BookingChat)
            .where(BookingChat.booking_id == booking_id)
            .order_by(BookingChat.created_at.asc())
        )
        messages = result.scalars().all()

    message = update.message or update.callback_query.message

    if not messages:
        await message.reply_text("üì≠ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—É—Å—Ç–∞.")
        return

    # –°–±–æ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏
    text_lines = [f"üìú 10 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Ññ{booking_id}:"]
    for msg in messages[-10:]:  # –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
        sender = "üë§ –ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä" if msg.sender_tg_id == booking.tg_user_id else "üè† –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫"
        timestamp = msg.created_at.strftime("%d.%m %H:%M")
        text_lines.append(f"{timestamp} | {sender}:\n{msg.message_text}")

    await message.reply_text("\n\n".join(text_lines))
