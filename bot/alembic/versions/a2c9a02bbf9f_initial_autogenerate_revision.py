"""initial autogenerate revision

Revision ID: a2c9a02bbf9f
Revises: 41b5167893f6
Create Date: 2025-09-04 09:20:19.305040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a2c9a02bbf9f'
down_revision: Union[str, Sequence[str], None] = '41b5167893f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Numeric(precision=4, scale=1), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='public'
    )
    op.create_table('order_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='public'
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='public'
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_user_id', sa.BIGINT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('last_action', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('role_id', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['public.roles.id'], ondelete='SET DEFAULT'),
    sa.ForeignKeyConstraint(['tg_user_id'], ['public.users.tg_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('drink_adds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drink_id', sa.Integer(), nullable=False),
    sa.Column('add_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['add_id'], ['public.adds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['drink_id'], ['public.drinks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drink_id', sa.Integer(), nullable=False),
    sa.Column('tg_file_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['drink_id'], ['public.drinks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_user_id', sa.BIGINT(), nullable=False),
    sa.Column('drink_size_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('drink_count', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=5, scale=1), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('customer_comment', sa.String(length=255), nullable=True),
    sa.Column('manager_comment', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.CheckConstraint('drink_count > 0', name='check_drink_count_positive'),
    sa.CheckConstraint('total_price >= 0', name='check_total_price_non_negative'),
    sa.ForeignKeyConstraint(['drink_size_id'], ['public.drink_sizes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['public.order_statuses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tg_user_id'], ['public.users.tg_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('order_adds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('add_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['add_id'], ['public.adds.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['order_id'], ['public.orders.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.alter_column('drink_sizes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('drink_sizes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('drink_sizes_drink_id_fkey'), 'drink_sizes', type_='foreignkey')
    op.drop_constraint(op.f('drink_sizes_size_id_fkey'), 'drink_sizes', type_='foreignkey')
    op.create_foreign_key(None, 'drink_sizes', 'sizes', ['size_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'drink_sizes', 'drinks', ['drink_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.alter_column('drinks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('drinks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('drinks_created_by_fkey'), 'drinks', type_='foreignkey')
    op.drop_constraint(op.f('drinks_type_id_fkey'), 'drinks', type_='foreignkey')
    op.create_foreign_key(None, 'drinks', 'users', ['created_by'], ['tg_user_id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'drinks', 'drink_types', ['type_id'], ['id'], source_schema='public', referent_schema='public', ondelete='RESTRICT')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(None, 'drinks', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'drinks', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('drinks_type_id_fkey'), 'drinks', 'drink_types', ['type_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(op.f('drinks_created_by_fkey'), 'drinks', 'users', ['created_by'], ['tg_user_id'], ondelete='CASCADE')
    op.alter_column('drinks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('drinks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(None, 'drink_sizes', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'drink_sizes', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('drink_sizes_size_id_fkey'), 'drink_sizes', 'sizes', ['size_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('drink_sizes_drink_id_fkey'), 'drink_sizes', 'drinks', ['drink_id'], ['id'], ondelete='CASCADE')
    op.alter_column('drink_sizes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('drink_sizes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_table('order_adds', schema='public')
    op.drop_table('orders', schema='public')
    op.drop_table('images', schema='public')
    op.drop_table('drink_adds', schema='public')
    op.drop_table('sessions', schema='public')
    op.drop_table('roles', schema='public')
    op.drop_table('order_statuses', schema='public')
    op.drop_table('adds', schema='public')
    # ### end Alembic commands ###
